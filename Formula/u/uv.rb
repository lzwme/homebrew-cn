class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.16.tar.gz"
  sha256 "90f01d916c842a9ff229e2ddc6418210154b7e7ccf13f1ec145f3c8100b445f6"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "d9703c6755a7f6e0cab816393e1e683f07606106f5a1878301a713431b018917"
    sha256 cellar: :any,                 arm64_ventura:  "5af1a97c3cecc91d532b02e3303b2f3199aaa1145e3fded0ed1a4ce8343b4a18"
    sha256 cellar: :any,                 arm64_monterey: "1a56cb18a6e502c389bdc011aee5a57b1cb98887bc48b335948ed888821f81d4"
    sha256 cellar: :any,                 sonoma:         "9d8fdcb6ee28aa8911aaa4c5758a4081fa5c506cfb209c85a70b22c7e09a7a7a"
    sha256 cellar: :any,                 ventura:        "3873bf90228d52575e1d4e013fe1ca7f41cee601d1a7a076a284d72a9230c414"
    sha256 cellar: :any,                 monterey:       "d26ff858ad54f33dd70ddc31884acbb7cb238730c74da7646340e61968a4d1cb"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "c252b472da1bf62950439dae5632ef6eb61748ea32422b2b68db3cab65d280b6"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end