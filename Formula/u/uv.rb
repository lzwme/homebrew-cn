class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.36.tar.gz"
  sha256 "2093683801765c45573e529452e9acfe40c04eda4c647749bda4cb411fda6c77"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "2893b2f655f3c776383f8d16f31a73bd872ff6cd5ecb5d42ff7fa52c381e409d"
    sha256 cellar: :any,                 arm64_ventura:  "eb4125e4074d8e82913ca73ef040553eaa74f7baf1df03b5cbac0edd52cf6ba1"
    sha256 cellar: :any,                 arm64_monterey: "fb5a69ff30d20ff44e247c3248d14d0c3127c9d76b650310a51b3f2e33a7f088"
    sha256 cellar: :any,                 sonoma:         "f417cf15f5b34539c784c1b909e90a6888b2bb7ae01f115e183322bb921ae86e"
    sha256 cellar: :any,                 ventura:        "310da5727cad2143e7579f1b212ff7f34ea55f873f6e10c26689a190d845f1d5"
    sha256 cellar: :any,                 monterey:       "16a748cf574a98e3dcbbefc63b4aa54f6a46e48ede9ea53e436f314c160709c9"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "7d551a016f1ddb69fcff466bc35a2966cc287fc5a31cf2c8fb52fe6d29bd22f7"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end