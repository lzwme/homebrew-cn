class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.29.tar.gz"
  sha256 "0f238e1684f7fa681ba34cfbefa714218b159ffa67076000ce02be1de961ef59"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "90d89a6672d68e3247f3845e38c077466c5387b8c9c9cabba91efb4f88eff673"
    sha256 cellar: :any,                 arm64_ventura:  "8f50cbf71c489d8ba5eb9031aa8c04f242fb0ab53f2c4a82ca853b91bdf712ce"
    sha256 cellar: :any,                 arm64_monterey: "273f9293e3622e70f40da706fce2c1c440f89aab386ca26f045caed725bb8485"
    sha256 cellar: :any,                 sonoma:         "c1b300d65a80d93d8bba6fff8238745106f04222fb72f0f6744593f5e8bd1a2c"
    sha256 cellar: :any,                 ventura:        "9be8bdcf5793e749573bfc8e84bbc6510e847dce7ec43be698ee95bd0ae6533a"
    sha256 cellar: :any,                 monterey:       "9fc2b11fc0e8efeaea109d46d3d0077342307ab81f2ffba299661b1466f44f2f"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "5c313edff3966e01e5d6fcd4213671ecf535b251ed0c4e02d1a8aa8c5442bfe8"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end