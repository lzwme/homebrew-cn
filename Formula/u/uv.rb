class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.17.tar.gz"
  sha256 "f0b4b6dac4193247f317384ef6599662a4e8ce6556dd16f509e7967171d7a883"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "2b8ad4a24c5cf7c8eeb688edf7697e06f7e98a88141fbffca42be9c8ff26b7e0"
    sha256 cellar: :any,                 arm64_ventura:  "8d0efc948bb090bbe025bad5dac78ad109e26dbe5375e90adee84c2d2d8ea117"
    sha256 cellar: :any,                 arm64_monterey: "f75f15219dae28736ca7d99fb7fb878ab4f071596d643dabc1fa58e99f5c683c"
    sha256 cellar: :any,                 sonoma:         "ddd25ae2ffc35f4b01c6f94d8e73f7a647e50cb759acda2d9c94c4e01711a0da"
    sha256 cellar: :any,                 ventura:        "56aa276d8570b90c5d0fc4e30a43a15a47c3fd7748cc368163e944ca0873044b"
    sha256 cellar: :any,                 monterey:       "f761abb0a33bdf851fdd8a19a40cd71744bff5efd4eb5e73efe23ba906b82788"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "8a3638d6be0790a361022a10bf4cb4f33b1b53ee825a492ec89250ade111436a"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end