class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.12.tar.gz"
  sha256 "59f72a1ec73abcbb520ed72883d86654a9d74224e4496479af3485d57c3e9581"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "060b3cc339eedd5ce44b12acfadaa63378e7f17a089d01e585ed161b20aa7adb"
    sha256 cellar: :any,                 arm64_ventura:  "49c9e3fafe11f25377a6d3141cecce8b89f68383a3ce03a653d8f4933db84a38"
    sha256 cellar: :any,                 arm64_monterey: "871b88ada3cd712aab24ac8f78b3171ed55265f9e0f7271261402c2feea9064a"
    sha256 cellar: :any,                 sonoma:         "c7d0356ac96f5e1f814e669e72699b0f09ddfd5278471048615a048c16b41bb5"
    sha256 cellar: :any,                 ventura:        "b2bb98e58d82ca40fb2fe5e253bd4d11ba9bed731a854ae3c3b4cc773f953bc5"
    sha256 cellar: :any,                 monterey:       "a717455500a34a78ea2df64f2771f76c919f724949630931d062ee4e81301868"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "3d98ea604c4cde5e4a3dc4646024a92f186ad7017f70104e9e93d88b1d13477a"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end