class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.13.tar.gz"
  sha256 "bbd9abb6d735400e3c142e863bc7d69ad539c422a013601f550dd8fd2312ae4f"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "ce93ba9811ff32a44b66343460556271d7816eb61c97484afc31a2e01bc1775e"
    sha256 cellar: :any,                 arm64_ventura:  "496f8055894a4ccdf8de98162f38fb2a2cb924b65d7a93554c6a4e8f7758066c"
    sha256 cellar: :any,                 arm64_monterey: "5bae032329150ebe7506c5b150fad24b2d444a31337dd59ec79b04d0bd70060e"
    sha256 cellar: :any,                 sonoma:         "4312a1dbde229e4612f5783a9bb20d1d281bb867ff86c5d7110950b88ba4241d"
    sha256 cellar: :any,                 ventura:        "e25814b0e06c17dc1a49bc9217e7b41942e1241c27a4ae4700e800b8c11fce78"
    sha256 cellar: :any,                 monterey:       "5ae83001b53d85f35ba47b75bb657dee44236477f236489a920be5a597738efb"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "da004e70576aa6811035fc165e6064ea1efe32bfc3ff6ff37bd0b096bab86665"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end