class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.5.6.tar.gz"
  sha256 "7be2246b0f8f54f3746aff1da35bb3bb995974714d7bc625300a0f91d6f5dae4"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "70af8452c1cb0678f4858c3fa3b56cec90efe08fcea0a34d4658f61e91ef6e89"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "300ecadd1939c18105761837cbb7b5cd5aed034029feea9d2980ac04608d7d3e"
    sha256 cellar: :any_skip_relocation, arm64_ventura: "e65aa29adad78c59c7520cbe447888c4157e7df324312bd78c989e446be04c68"
    sha256 cellar: :any_skip_relocation, sonoma:        "f95cfd25c169bcd1c80ebaf06fe802caced023ab0f22fd9f88e1b7db5087ddea"
    sha256 cellar: :any_skip_relocation, ventura:       "02d212e2047d505508c5d68035c6c0c0f63fab4832ba8cae4801f671970d8d5d"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "d3b1a57f03dd345d0c7eff4fbb5b3222582a28f5661d66dd53276b18abb9a030"
  end

  depends_on "pkgconf" => :build
  depends_on "rust" => :build

  uses_from_macos "python" => :test
  uses_from_macos "bzip2"
  uses_from_macos "xz"

  def install
    ENV["UV_COMMIT_HASH"] = ENV["UV_COMMIT_SHORT_HASH"] = tap.user
    ENV["UV_COMMIT_DATE"] = time.strftime("%F")
    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
    generate_completions_from_executable(bin"uvx", "--generate-shell-completion", base_name: "uvx")
  end

  test do
    (testpath"requirements.in").write <<~REQUIREMENTS
      requests
    REQUIREMENTS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    assert_match "ruff 0.5.1", shell_output("#{bin}uvx -q ruff@0.5.1 --version")
  end
end