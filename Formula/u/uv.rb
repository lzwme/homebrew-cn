class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.5.8.tar.gz"
  sha256 "f7baab258ed0fbd62db007e9b7fc4dfd44089f563063a7e7b118174d60ef627c"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "870f7d8cba08dfdc91aa5f43e3eb917eca6c6180290fc80ae3d99233a0ecb56b"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "dc91b9af090b435bd6a9ba5da27a926d8627f19882685a8948f049de5f4c464c"
    sha256 cellar: :any_skip_relocation, arm64_ventura: "724a2fb0f7159cf0dbdf31f82b5570e4f6f1291d8b73897a779044fe70ff9767"
    sha256 cellar: :any_skip_relocation, sonoma:        "75226c84976c38013cb3b192ad671fc4fc6b74090734effa413a8203474b4a3b"
    sha256 cellar: :any_skip_relocation, ventura:       "621a537bca12b1df5244ae43727a304f63c4973a2e9c2a81c3add8199cbdc622"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "dae19f197e7c9f13064a69ffbe86319c758f917c25189a1d73765b82068a92e0"
  end

  depends_on "pkgconf" => :build
  depends_on "rust" => :build

  uses_from_macos "python" => :test
  uses_from_macos "bzip2"
  uses_from_macos "xz"

  def install
    ENV["UV_COMMIT_HASH"] = ENV["UV_COMMIT_SHORT_HASH"] = tap.user
    ENV["UV_COMMIT_DATE"] = time.strftime("%F")
    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
    generate_completions_from_executable(bin"uvx", "--generate-shell-completion", base_name: "uvx")
  end

  test do
    (testpath"requirements.in").write <<~REQUIREMENTS
      requests
    REQUIREMENTS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    assert_match "ruff 0.5.1", shell_output("#{bin}uvx -q ruff@0.5.1 --version")
  end
end