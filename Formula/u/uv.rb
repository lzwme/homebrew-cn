class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.14.tar.gz"
  sha256 "1cef7293a3844312695f016a524cb88c38399ea6510e64cafc6e3d9611d32884"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "b37a52f98660e9a0ca8e34bedd36090f8efd620235ec0b48168971efcb387098"
    sha256 cellar: :any,                 arm64_ventura:  "036b279702e730d34085d9e146a340e6cccdda372b8a7f14f5078eb9ae8cc1a1"
    sha256 cellar: :any,                 arm64_monterey: "c5dd8904e6a9076b9e339c2a4996dd319bb5f368fa198362db7a6be07c261bbf"
    sha256 cellar: :any,                 sonoma:         "59c146222b03719c7ff1b2ec4b506ee3dcef37cd158b0b760fa57b4c6638c2b5"
    sha256 cellar: :any,                 ventura:        "58720b0cff861678347171ff07ca6505b4d3206e1b6188b6d3c7b2979289d4ba"
    sha256 cellar: :any,                 monterey:       "37e07e795eb3a327365e7a3b936eda261ec8daded2b17c6010704d5a6ff4b9f3"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "8cb38e8bbdcc7a1a91c46197d3c15250757bf4617f7e766e08c8efb716c44990"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end