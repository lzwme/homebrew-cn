class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.37.tar.gz"
  sha256 "e6e68d7453b16877954f29ffcd9fcd09c8c56b98bfba0312afa75c4137c70503"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "3355f45f128a4462b21911ceac5f5f9614b83a064c3fb2420a8fb554f57c380a"
    sha256 cellar: :any,                 arm64_ventura:  "8a3b48730f94f97fead7d705634f0175109d83d6a0bc7ee867d336dd03091ea5"
    sha256 cellar: :any,                 arm64_monterey: "943a5a978b4ecb8144c5d5e02bf9efc043916ad2546e08a99b0e6a4d1ca8aee0"
    sha256 cellar: :any,                 sonoma:         "17653b97db88dd1e9a695b17d70774196c627b7bce066d0d85baca4bdf0b03f6"
    sha256 cellar: :any,                 ventura:        "a2828eec5ed752a7643c1b50664b7078c695c49e7bb28903fbfa634471aa2502"
    sha256 cellar: :any,                 monterey:       "3c6a65852513337894d165546c268bb2e4f2d6e32cd3e9f914e3636f47cdbca3"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "5dc25173137b2f3b03e5f91a30f7f4882d4eabb3819ac6a16f34a1a3150f14f0"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end