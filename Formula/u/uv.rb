class Uv < Formula
  desc "Extremely fast Python package installer and resolver, written in Rust"
  homepage "https:github.comastral-shuv"
  url "https:github.comastral-shuvarchiverefstags0.1.10.tar.gz"
  sha256 "2c31cb4b0d8c9e38f456bb813e40acb369cccf169043e9642b9879bd144f05b6"
  license any_of: ["Apache-2.0", "MIT"]
  head "https:github.comastral-shuv.git", branch: "main"

  bottle do
    sha256 cellar: :any,                 arm64_sonoma:   "421d875e41fc9f28cac866ebcc20d2985836acf41448f6dc703901905a75c514"
    sha256 cellar: :any,                 arm64_ventura:  "cdf4baf55b4d94d922aaa0d6cb4a760cd0b0d7bd816a24338321803b34ae2592"
    sha256 cellar: :any,                 arm64_monterey: "ea8be7a79011a418960603a36747be30640b034f33bd0b71b030fff68f146284"
    sha256 cellar: :any,                 sonoma:         "fb6b2a07c24f53243fc2f6dc0dc3a3d61f6025ec0923b963c1607e29e21f718a"
    sha256 cellar: :any,                 ventura:        "85e40cd31602b7779eb3d019b31376bade9d642cd5f75857e1663de06f138c80"
    sha256 cellar: :any,                 monterey:       "884a4c5909c133c8ad597037836a17b1189b1487a1385913483eb3d11fca7e40"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "85facd408738b61e89c05a0c7b1417305ad6fcd2abf11d93a81750e276ea0f2b"
  end

  depends_on "pkg-config" => :build
  depends_on "rust" => :build
  depends_on "libgit2"
  depends_on "openssl@3"

  uses_from_macos "python" => :test

  def install
    ENV["LIBGIT2_NO_VENDOR"] = "1"

    # Ensure that the `openssl` crate picks up the intended library.
    ENV["OPENSSL_DIR"] = Formula["openssl@3"].opt_prefix
    ENV["OPENSSL_NO_VENDOR"] = "1"

    system "cargo", "install", "--no-default-features", *std_cargo_args(path: "cratesuv")
    generate_completions_from_executable(bin"uv", "generate-shell-completion")
  end

  def check_binary_linkage(binary, library)
    binary.dynamically_linked_libraries.any? do |dll|
      next false unless dll.start_with?(HOMEBREW_PREFIX.to_s)

      File.realpath(dll) == File.realpath(library)
    end
  end

  test do
    (testpath"requirements.in").write <<~EOS
      requests
    EOS

    compiled = shell_output("#{bin}uv pip compile -q requirements.in")
    assert_match "This file was autogenerated by uv", compiled
    assert_match "# via requests", compiled

    [
      Formula["libgit2"].opt_libshared_library("libgit2"),
      Formula["openssl@3"].opt_libshared_library("libssl"),
      Formula["openssl@3"].opt_libshared_library("libcrypto"),
    ].each do |library|
      assert check_binary_linkage(bin"uv", library),
             "No linkage with #{library.basename}! Cargo is likely using a vendored version."
    end
  end
end