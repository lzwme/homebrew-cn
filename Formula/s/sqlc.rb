class Sqlc < Formula
  desc "Generate type safe Go from SQL"
  homepage "https:sqlc.dev"
  url "https:github.comsqlc-devsqlcarchiverefstagsv1.24.0.tar.gz"
  sha256 "e7fd6ab1f87c4270117507e9e7516b75bc948ef84cb49129e6b0ad098cc102ef"
  license "MIT"
  head "https:github.comsqlc-devsqlc.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_sonoma:   "60c1f83864c163f0a2141da7c92fcece8325f67af70dd4e6b7c7390a743d292f"
    sha256 cellar: :any_skip_relocation, arm64_ventura:  "bdeb613efe6ee387fa3c45c217657ecd5f028b719bf7f08062038f546902e397"
    sha256 cellar: :any_skip_relocation, arm64_monterey: "6d3980fa09f2af7f9e2c8dad58d76692bae9fa4b09adf8453655dee1435f2429"
    sha256 cellar: :any_skip_relocation, sonoma:         "9dc93e211daeb0be76050494071085e9f77ec134a29cc68f7131f0727aa404fb"
    sha256 cellar: :any_skip_relocation, ventura:        "a43d030d57d4b80bda9a3b52e4a5e16a83eeed9adb2f4d9eeb45d8762147affe"
    sha256 cellar: :any_skip_relocation, monterey:       "50aa280db23ccb803014dc44e2a42aa2c78efe2484d42b99d6c385bad42d0cf7"
    sha256 cellar: :any_skip_relocation, x86_64_linux:   "bb61d398d062c878d5282d9236f7af55a829fab0a1a5e14c16ac6e7de5fad3e7"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w"), ".cmdsqlc"

    generate_completions_from_executable(bin"sqlc", "completion")
  end

  test do
    (testpath"sqlc.json").write <<~SQLC
      {
        "version": "1",
        "packages": [
          {
            "name": "db",
            "path": ".",
            "queries": "query.sql",
            "schema": "query.sql",
            "engine": "postgresql"
          }
        ]
      }
    SQLC

    (testpath"query.sql").write <<~EOS
      CREATE TABLE foo (bar text);

      -- name: SelectFoo :many
      SELECT * FROM foo;
    EOS

    system bin"sqlc", "generate"
    assert_predicate testpath"db.go", :exist?
    assert_predicate testpath"models.go", :exist?
    assert_match " Code generated by sqlc. DO NOT EDIT.", File.read(testpath"query.sql.go")
  end
end