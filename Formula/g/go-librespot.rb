class GoLibrespot < Formula
  desc "Spotify client"
  homepage "https://github.com/devgianlu/go-librespot"
  url "https://ghfast.top/https://github.com/devgianlu/go-librespot/archive/refs/tags/v0.5.0.tar.gz"
  sha256 "31ecb4535a530e868721e867151e9fdf644a29d0ff489f2d6bfc9d2d7620a1c7"
  license "GPL-3.0-only"
  head "https://github.com/devgianlu/go-librespot.git", branch: "master"

  bottle do
    sha256 cellar: :any,                 arm64_tahoe:   "d5a538cc70edc2317d4b506a7193e00128118ba0d077eef76f3561fff1e25345"
    sha256 cellar: :any,                 arm64_sequoia: "653b4d46b08bc74fdf74898aac3b3ffa4d39a9d685d2de2556abebd1ce5805d4"
    sha256 cellar: :any,                 arm64_sonoma:  "b8f9ab92a2920edadf128df80b149c5b0a899fe4f224655bfae3db6bf41afdb5"
    sha256 cellar: :any,                 sonoma:        "e45ea133fa96322fb8885208242fb73169cde1db7871a8af62c5f94d0f4a2929"
    sha256 cellar: :any_skip_relocation, arm64_linux:   "02147386817ac2228cfb44bd0c27ead71aaeeae8db8bb4d0c0bf672e76c12e29"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "2fa80ea1c1886799990ddf04b75521f6f571287ce27cc7ad0023e76ce7e1f71e"
  end

  depends_on "go" => :build
  depends_on "pkgconf" => :build
  depends_on "libogg"
  depends_on "libvorbis"

  on_linux do
    depends_on "alsa-lib"
  end

  def install
    ldflags = %W[
      -s -w
      -X github.com/devgianlu/go-librespot.version=#{version}
    ]
    ldflags << "-X github.com/devgianlu/go-librespot.commit=#{Utils.git_short_head(length: 8)}" if build.head?

    system "go", "build", *std_go_args(output: bin/"go-librespot", ldflags: ldflags), "./cmd/daemon"

    # On macOS, create a minimal config that selects the correct backend.
    return unless OS.mac?

    (buildpath/"config.yml").write <<~YAML
      # Auto-generated by Homebrew. You can edit this file.
      # Use CoreAudio via AudioToolbox on macOS.
      audio_backend: audio-toolbox
    YAML
    pkgetc.install "config.yml"
  end

  def post_install
    (var/"log").mkpath
  end

  service do
    run [opt_bin/"go-librespot", "--config_dir", etc/"go-librespot"]
    keep_alive true
    log_path var/"log/go-librespot.log"
    error_log_path var/"log/go-librespot.log"
  end

  test do
    cfg = testpath/"config.yml"
    cfg.write <<~YAML
      volume_steps: not_a_number
    YAML

    output = shell_output("#{bin}/go-librespot --config_dir #{testpath} 2>&1", 1)
    assert_match "failed loading config", output
    assert_match "failed to unmarshal configuration", output
  end
end