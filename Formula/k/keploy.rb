class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://ghfast.top/https://github.com/keploy/keploy/archive/refs/tags/v2.11.4.tar.gz"
  sha256 "a5cb928460594fd28c275cbe60fe8901b33b1459762cd064f3c0940feed87746"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "b6f5a09317e2d654116fe000c37adc8729471a3e0b3298c76a33797d511984bc"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "b6f5a09317e2d654116fe000c37adc8729471a3e0b3298c76a33797d511984bc"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "b6f5a09317e2d654116fe000c37adc8729471a3e0b3298c76a33797d511984bc"
    sha256 cellar: :any_skip_relocation, sonoma:        "2570592773dd670a7583818c7df6f2149e23fd3c7213d7ac5d82ef773cde8f7e"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "60776d1a7b0ba1b71036c37f28921e0e104617cd978114dd262ba7fa2c9e24ef"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end