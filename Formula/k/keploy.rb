class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://ghfast.top/https://github.com/keploy/keploy/archive/refs/tags/v2.11.3.tar.gz"
  sha256 "033d2e754b8fd0f83c917074c4117cd163e56cbd9bdf27bdf48435254267723e"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "35f82e3bd9aa18040a20dcf2470af71800b0a761ffd96fcbde4be3d026f0e89b"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "35f82e3bd9aa18040a20dcf2470af71800b0a761ffd96fcbde4be3d026f0e89b"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "35f82e3bd9aa18040a20dcf2470af71800b0a761ffd96fcbde4be3d026f0e89b"
    sha256 cellar: :any_skip_relocation, sonoma:        "c4cdbe5a3808598e8439571af6fb2414e136f8e79c2d7b379ee82fd11b259872"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "b1e8d5e4e368c93741ef9e37c680bb84b75c18c99bcec75e8b2191b2bc26a620"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end