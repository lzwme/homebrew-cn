class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://ghfast.top/https://github.com/keploy/keploy/archive/refs/tags/v2.10.20.tar.gz"
  sha256 "e66ffbf6c399ac06570b0920da3968b6feb14573a78e00ea02bda6c24a7e897b"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "0c0e82ae0cd82dfa6d36c3a0cc2948e750f7c7fd138cc23336ec64d23c018102"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "0c0e82ae0cd82dfa6d36c3a0cc2948e750f7c7fd138cc23336ec64d23c018102"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "0c0e82ae0cd82dfa6d36c3a0cc2948e750f7c7fd138cc23336ec64d23c018102"
    sha256 cellar: :any_skip_relocation, sonoma:        "826931c2e2960b421495cc5fcd33f6c8457f055b6fdecca6f4fdef783b507663"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "17cb475179a834804ae9ab4f234e1b1d7707f00e110df0f359dceaedbfacd282"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end