class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://ghfast.top/https://github.com/keploy/keploy/archive/refs/tags/v2.10.25.tar.gz"
  sha256 "63482ca2d251c52e84771f05ab77e502bbec715204122d6431e58358baba4989"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "8e77ed251cf0e37252ef7c63c98e9c6d746bd7033fbb323a8d9c83dc2aec23dd"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "8e77ed251cf0e37252ef7c63c98e9c6d746bd7033fbb323a8d9c83dc2aec23dd"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "8e77ed251cf0e37252ef7c63c98e9c6d746bd7033fbb323a8d9c83dc2aec23dd"
    sha256 cellar: :any_skip_relocation, sonoma:        "181644b486d822fc6e033783882cc35f153966b35dec7dcd4a39ff6544432b58"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "ddcd037ae2a176278d296f1c39a7de8f87846f42c3aeffb66f1c32900cc4dd04"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end