class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://ghfast.top/https://github.com/keploy/keploy/archive/refs/tags/v2.10.22.tar.gz"
  sha256 "2fb1f94e5412c78a64ed72f7568106eda5a1ce512511ae82c416ab3afff32c00"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "8ec3533643ed7ed0916e8f3f7c03e87b71d2e8a81865adabc77fb839cd3698b2"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "8ec3533643ed7ed0916e8f3f7c03e87b71d2e8a81865adabc77fb839cd3698b2"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "8ec3533643ed7ed0916e8f3f7c03e87b71d2e8a81865adabc77fb839cd3698b2"
    sha256 cellar: :any_skip_relocation, sonoma:        "17e3f3b2b9baded7d8d5b04e2cda77dd90eb41596d87adfcace9b4d91f57cc3f"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "3bef55c504f81233c06d31b764337e0d5db73f80fb6a9ab398a012a22519668e"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end