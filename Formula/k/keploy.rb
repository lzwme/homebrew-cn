class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https:keploy.io"
  url "https:github.comkeploykeployarchiverefstagsv2.4.6.tar.gz"
  sha256 "7f53d13cb3650cff26ec6dcbd5f9486aad5f7f1d2a76bca7a7f2714f80da8299"
  license "Apache-2.0"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "5d260e34a2a2829ddc0c5cb391160a63bdbdcfc63c733ce6d65fbfd280f3dbff"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "5d260e34a2a2829ddc0c5cb391160a63bdbdcfc63c733ce6d65fbfd280f3dbff"
    sha256 cellar: :any_skip_relocation, arm64_ventura: "5d260e34a2a2829ddc0c5cb391160a63bdbdcfc63c733ce6d65fbfd280f3dbff"
    sha256 cellar: :any_skip_relocation, sonoma:        "3f388f58903d738d03ce722d21a90ba3de93354030a1d61fd7e96e909c572b29"
    sha256 cellar: :any_skip_relocation, ventura:       "3f388f58903d738d03ce722d21a90ba3de93354030a1d61fd7e96e909c572b29"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "7db6b350e1c9b8aa7d5dba353072b4d6c5d003634f69de10c4dd31b640453d61"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath"keploy.yml").read

    output = shell_output("#{bin}keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}keploy --version")
  end
end