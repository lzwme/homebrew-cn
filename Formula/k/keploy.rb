class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://ghfast.top/https://github.com/keploy/keploy/archive/refs/tags/v2.10.28.tar.gz"
  sha256 "b79ba2704ba4e7ba3f99028f9b5b75d0629ba7105ff64cfe742e12e644bfdeea"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "021a03de3b67775e84665a0e38b8797f95c08e883abdbe4f682bcdc82f973263"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "021a03de3b67775e84665a0e38b8797f95c08e883abdbe4f682bcdc82f973263"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "021a03de3b67775e84665a0e38b8797f95c08e883abdbe4f682bcdc82f973263"
    sha256 cellar: :any_skip_relocation, sonoma:        "be9b45272b8a96985eef23ba72c653bf01f41ccca4e0d998f2a614d725e4eccb"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "d413176912c635191a33db20e22176419e0b13a3a340a0458903b8bea00108bd"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end