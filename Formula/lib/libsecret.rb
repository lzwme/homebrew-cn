class Libsecret < Formula
  desc "Library for storing/retrieving passwords and other secrets"
  homepage "https://wiki.gnome.org/Projects/Libsecret"
  url "https://download.gnome.org/sources/libsecret/0.21/libsecret-0.21.1.tar.xz"
  sha256 "674f51323a5f74e4cb7e3277da68b5afddd333eca25bc9fd2d820a92972f90b1"
  license "LGPL-2.1-or-later"

  # libsecret doesn't use GNOME's "even-numbered minor is stable" version
  # scheme. This regex is the same as the one generated by the `Gnome` strategy
  # but it's necessary to avoid the related version scheme logic.
  livecheck do
    url :stable
    regex(/libsecret[._-]v?(\d+(?:\.\d+)+)\.t/i)
  end

  bottle do
    sha256 cellar: :any, arm64_sonoma:   "70d4d466195191082789cc96112920a47a56a79b0a175013a87557ec60a6e1d5"
    sha256 cellar: :any, arm64_ventura:  "496d8de1efe50f28f377a359d168ce7631794a6bab1024cfbdcae7e288edbf24"
    sha256 cellar: :any, arm64_monterey: "7e6ea2e39e78188839b1d85db2353beced5fe6391ed204c02c1a6ec5425df844"
    sha256 cellar: :any, sonoma:         "84b34d1a376097cec9cf5b8d510a965e3399ff3c896912818eca59755980c91d"
    sha256 cellar: :any, ventura:        "25fbd2dee1126fbe13244c1526a9816d7a3c4d852fd285454a20919f0b8ed371"
    sha256 cellar: :any, monterey:       "cc8b384e45108a69d44c215020c2dd15dfd03a363a428a579c32a8b14b118809"
    sha256               x86_64_linux:   "5b6b90253e75ca3a2d975baabd671d70880042fabaed291f202be79ebc7eff31"
  end

  depends_on "docbook-xsl" => :build
  depends_on "gettext" => :build
  depends_on "gobject-introspection" => :build
  depends_on "meson" => :build
  depends_on "ninja" => :build
  depends_on "pkg-config" => :build
  depends_on "vala" => :build
  depends_on "glib"
  depends_on "libgcrypt"
  uses_from_macos "libxslt" => :build

  def install
    ENV["XML_CATALOG_FILES"] = "#{etc}/xml/catalog"

    mkdir "build" do
      system "meson", "..", "-Dbashcompdir=#{bash_completion}",
                            "-Dgtk_doc=false",
                            *std_meson_args
      system "ninja", "--verbose"
      system "ninja", "install", "--verbose"
    end
  end

  test do
    (testpath/"test.c").write <<~EOS
      #include <libsecret/secret.h>

      const SecretSchema * example_get_schema (void) G_GNUC_CONST;

      const SecretSchema *
      example_get_schema (void)
      {
          static const SecretSchema the_schema = {
              "org.example.Password", SECRET_SCHEMA_NONE,
              {
                  {  "number", SECRET_SCHEMA_ATTRIBUTE_INTEGER },
                  {  "string", SECRET_SCHEMA_ATTRIBUTE_STRING },
                  {  "even", SECRET_SCHEMA_ATTRIBUTE_BOOLEAN },
                  {  "NULL", 0 },
              }
          };
          return &the_schema;
      }

      int main()
      {
          example_get_schema();
          return 0;
      }
    EOS

    flags = [
      "-I#{include}/libsecret-1",
      "-I#{HOMEBREW_PREFIX}/include/glib-2.0",
      "-I#{HOMEBREW_PREFIX}/lib/glib-2.0/include",
    ]

    system ENV.cc, "test.c", "-o", "test", *flags
    system "./test"
  end
end