class Libsecret < Formula
  desc "Library for storing/retrieving passwords and other secrets"
  homepage "https://wiki.gnome.org/Projects/Libsecret"
  url "https://download.gnome.org/sources/libsecret/0.21/libsecret-0.21.2.tar.xz"
  sha256 "e4a341496a0815e64c8d3b8fabab33d7bae7efdeab77b843669731d5b181dcee"
  license "LGPL-2.1-or-later"

  # libsecret doesn't use GNOME's "even-numbered minor is stable" version
  # scheme. This regex is the same as the one generated by the `Gnome` strategy
  # but it's necessary to avoid the related version scheme logic.
  livecheck do
    url :stable
    regex(/libsecret[._-]v?(\d+(?:\.\d+)+)\.t/i)
  end

  bottle do
    sha256 cellar: :any, arm64_sonoma:   "66204c2d62a48cc86b2e55061b41fc67dd64e67034401182fea744f6fa0e6aa2"
    sha256 cellar: :any, arm64_ventura:  "243d1e99e677521007154cd08ece922ce27326c61a4fc72b689bbf031747166c"
    sha256 cellar: :any, arm64_monterey: "011bb06786079463f5bdd45e58d8944aed35be0b629d34cc8137824fd78fcf6b"
    sha256 cellar: :any, sonoma:         "5fb9695f27e7fbb2d97957fb8563f46e5d340dd936f99cfed99d733e6c7e6f4a"
    sha256 cellar: :any, ventura:        "65937013f5b61d2dfba27f85583628d1404094bc91ee1260bd27f10baa9d8d8e"
    sha256 cellar: :any, monterey:       "29bbf92dd4ebf95213180b32a0ee03ae5e03946052248d8a61b3770f6be822fa"
    sha256               x86_64_linux:   "45d86db28032340c153c992309830a5c829a1362b95226c19af007150473e2fb"
  end

  depends_on "docbook-xsl" => :build
  depends_on "gettext" => :build
  depends_on "gobject-introspection" => :build
  depends_on "meson" => :build
  depends_on "ninja" => :build
  depends_on "pkg-config" => :build
  depends_on "vala" => :build
  depends_on "glib"
  depends_on "libgcrypt"
  uses_from_macos "libxslt" => :build

  def install
    ENV["XML_CATALOG_FILES"] = "#{etc}/xml/catalog"

    mkdir "build" do
      system "meson", "..", "-Dbashcompdir=#{bash_completion}",
                            "-Dgtk_doc=false",
                            *std_meson_args
      system "ninja", "--verbose"
      system "ninja", "install", "--verbose"
    end
  end

  test do
    (testpath/"test.c").write <<~EOS
      #include <libsecret/secret.h>

      const SecretSchema * example_get_schema (void) G_GNUC_CONST;

      const SecretSchema *
      example_get_schema (void)
      {
          static const SecretSchema the_schema = {
              "org.example.Password", SECRET_SCHEMA_NONE,
              {
                  {  "number", SECRET_SCHEMA_ATTRIBUTE_INTEGER },
                  {  "string", SECRET_SCHEMA_ATTRIBUTE_STRING },
                  {  "even", SECRET_SCHEMA_ATTRIBUTE_BOOLEAN },
                  {  "NULL", 0 },
              }
          };
          return &the_schema;
      }

      int main()
      {
          example_get_schema();
          return 0;
      }
    EOS

    flags = [
      "-I#{include}/libsecret-1",
      "-I#{HOMEBREW_PREFIX}/include/glib-2.0",
      "-I#{HOMEBREW_PREFIX}/lib/glib-2.0/include",
    ]

    system ENV.cc, "test.c", "-o", "test", *flags
    system "./test"
  end
end