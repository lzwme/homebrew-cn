class Libsecret < Formula
  desc "Library for storing/retrieving passwords and other secrets"
  homepage "https://wiki.gnome.org/Projects/Libsecret"
  url "https://download.gnome.org/sources/libsecret/0.21/libsecret-0.21.3.tar.xz"
  sha256 "9a3e2571f1048035d80238f52c8760125884a43baf8a580fedb7250c1ad0a9e7"
  license "LGPL-2.1-or-later"

  # libsecret doesn't use GNOME's "even-numbered minor is stable" version
  # scheme. This regex is the same as the one generated by the `Gnome` strategy
  # but it's necessary to avoid the related version scheme logic.
  livecheck do
    url :stable
    regex(/libsecret[._-]v?(\d+(?:\.\d+)+)\.t/i)
  end

  bottle do
    sha256 cellar: :any, arm64_sonoma:   "876f186e80aca21c3033824298636e0135a1b11e636015d222f597640cb3904c"
    sha256 cellar: :any, arm64_ventura:  "0af22a3cc2892ee698fdaf332c4f4f13dd59346ecce29ac193a7c0a3f9392fd9"
    sha256 cellar: :any, arm64_monterey: "687b6b63a6ac0238acd8b8f3757ae4804e2f9586c415d6f246deee2ad2ea3167"
    sha256 cellar: :any, sonoma:         "c4702669e6c25bee6d1f6de37f8f76b8db5ac1c19bf64f5ff84e7ae9b273d83c"
    sha256 cellar: :any, ventura:        "fb2db1610673886252639290da058d609f7663eff9aec517c643f7b565e288a9"
    sha256 cellar: :any, monterey:       "754c168f31ff34de2eebb29b18dfd012db75888b21cf937580024e80816da5b5"
    sha256               x86_64_linux:   "0eeabf437f120ddeaa7511466f3faa5cb9a633e720a3b26934726a6d41836112"
  end

  depends_on "docbook-xsl" => :build
  depends_on "gettext" => :build
  depends_on "gobject-introspection" => :build
  depends_on "meson" => :build
  depends_on "ninja" => :build
  depends_on "pkg-config" => [:build, :test]
  depends_on "vala" => :build
  depends_on "glib"
  depends_on "libgcrypt"
  uses_from_macos "libxslt" => :build

  def install
    ENV["XML_CATALOG_FILES"] = "#{etc}/xml/catalog"

    system "meson", "setup", "build", "-Dbashcompdir=#{bash_completion}",
                                      "-Dgtk_doc=false",
                                      *std_meson_args
    system "meson", "compile", "-C", "build", "--verbose"
    system "meson", "install", "-C", "build"
  end

  test do
    (testpath/"test.c").write <<~EOS
      #include <libsecret/secret.h>

      const SecretSchema * example_get_schema (void) G_GNUC_CONST;

      const SecretSchema *
      example_get_schema (void)
      {
          static const SecretSchema the_schema = {
              "org.example.Password", SECRET_SCHEMA_NONE,
              {
                  {  "number", SECRET_SCHEMA_ATTRIBUTE_INTEGER },
                  {  "string", SECRET_SCHEMA_ATTRIBUTE_STRING },
                  {  "even", SECRET_SCHEMA_ATTRIBUTE_BOOLEAN },
                  {  "NULL", 0 },
              }
          };
          return &the_schema;
      }

      int main()
      {
          example_get_schema();
          return 0;
      }
    EOS

    pkg_config_cflags = shell_output("pkg-config --cflags --libs libsecret-1").chomp.split
    system ENV.cc, "test.c", *pkg_config_cflags, "-o", "test"
    system "./test"
  end
end